{"ast":null,"code":"import _objectSpread from \"/home/sumb0dy/Desktop/hackathon/WICKPYZ-Hackathon/healthrx/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/sumb0dy/Desktop/hackathon/WICKPYZ-Hackathon/healthrx/src/Login/DoctorLogin.js\";\nimport React, { Component } from 'react';\nimport './Login.css';\nimport { Form } from 'react-bootstrap';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../constants/routes';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nconst DoctorLoginPage = () => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, React.createElement(\"h2\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, \" Doctor Login \"), React.createElement(DoctorLoginForm, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}));\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  dataset: [],\n  error: null\n};\n\nclass DoctorLogin extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.onSubmit = event => {\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n      this.props.firebase.doSignInWithEmailAndPassword(email, password).then(() => {\n        this.setState(_objectSpread({}, INITIAL_STATE));\n        this.props.history.push(ROUTES.DOCTOR_HOME); // REDIRECTS TO USERS HOME \n      }).catch(error => {\n        this.setState({\n          error: error\n        });\n      });\n      event.preventDefault();\n    };\n\n    this.state = _objectSpread({}, INITIAL_STATE);\n  }\n\n  componentDidMount() {\n    // this.setState(a{ loading: true });\n    this.unsubscribe = this.props.firebase.patients().onSnapshot(snapshot => {\n      let dataset = [];\n      snapshot.forEach(doc => dataset.push(_objectSpread({}, doc.data(), {\n        uid: doc.id\n      })));\n      console.log(dataset[0].period1Score[1]);\n      this.setState({\n        dataset,\n        loading: false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          error = _this$state2.error;\n    return React.createElement(\"div\", {\n      id: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Doctor Login\"), React.createElement(\"div\", {\n      id: \"facelogo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"fas fa-user-md\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Sign in\"), React.createElement(\"form\", {\n      method: \"POST\",\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"form-group\",\n      id: \"input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"far fa-user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"email\",\n      placeholder: \"Enter username\",\n      onChange: this.onChange,\n      value: email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"form-group\",\n      id: \"input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"fas fa-key\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(Form.Control, {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Enter password\",\n      onChange: this.onChange,\n      value: password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      class: \"btn btn\",\n      id: \"loginb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Login\"), error && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, error.message)));\n  }\n\n}\n\nconst DoctorLoginForm = compose(withRouter, withFirebase)(DoctorLogin);\nexport default DoctorLoginPage;\nexport { DoctorLoginForm };","map":{"version":3,"sources":["/home/sumb0dy/Desktop/hackathon/WICKPYZ-Hackathon/healthrx/src/Login/DoctorLogin.js"],"names":["React","Component","Form","withFirebase","ROUTES","withRouter","compose","DoctorLoginPage","INITIAL_STATE","email","password","dataset","error","DoctorLogin","constructor","props","onChange","event","setState","target","name","value","onSubmit","state","firebase","doSignInWithEmailAndPassword","then","history","push","DOCTOR_HOME","catch","preventDefault","componentDidMount","unsubscribe","patients","onSnapshot","snapshot","forEach","doc","data","uid","id","console","log","period1Score","loading","componentWillUnmount","render","message","DoctorLoginForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './Login.css'\nimport {Form} from 'react-bootstrap'\n\nimport {  withFirebase } from '../Firebase';\nimport * as ROUTES from '../constants/routes'\nimport { withRouter } from 'react-router-dom';\nimport {compose} from 'recompose';\n\n\n\n\nconst DoctorLoginPage = () =>(\n    <div>\n        <h2> Doctor Login </h2>\n        <DoctorLoginForm/>\n     \n    </div>\n\n\n)\n\n\nconst INITIAL_STATE ={\n    email: '',\n    password: '',\n    dataset: [],\n    error: null,\n};\n\n\n\nclass DoctorLogin extends Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = { ...INITIAL_STATE };\n      }\n      onChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n      };\n\n    onSubmit = event => {\n        const { email, password } = this.state;\n\n        this.props.firebase\n          .doSignInWithEmailAndPassword(email, password)\n          .then(() => {\n            this.setState({ ...INITIAL_STATE });\n            this.props.history.push(ROUTES.DOCTOR_HOME); // REDIRECTS TO USERS HOME \n          })\n          .catch(error => {\n            this.setState({ error: error });\n          });\n    \n        event.preventDefault();\n\n    };\n\n\n    componentDidMount() {\n        // this.setState(a{ loading: true });\n        this.unsubscribe = this.props.firebase\n          .patients()\n          .onSnapshot(snapshot => {\n            let dataset = [];\n            snapshot.forEach(doc =>\n              dataset.push({ ...doc.data(), uid: doc.id }),\n            );\n            console.log(dataset[0].period1Score[1]);\n    \n            this.setState({\n                dataset,\n              loading: false,\n            });\n          });\n      }\n    \n      componentWillUnmount() {\n        this.unsubscribe();\n      }\n\n\n    render() {\n        const { email, password, error } = this.state;\n\n\n        return (\n            <div id=\"login\"> \n\n                <h2>Doctor Login</h2> \n                <div id=\"facelogo\"> \n                    <i class=\"fas fa-user-md\"></i>\n                </div>\n                <h1>Sign in</h1> \n                <form method=\"POST\" onSubmit={this.onSubmit}>\n                    <div class=\"form-group\" id=\"input\">\n                        <i class=\"far fa-user\"></i>\n                        <Form.Control type=\"text\" name=\"email\" placeholder=\"Enter username\" onChange={this.onChange}  value={email} />\n                   \n\n                    </div>\n                    <div class=\"form-group\" id=\"input\">\n                        <i class=\"fas fa-key\"></i>\n                       \n\n                        <Form.Control type=\"password\" name=\"password\" placeholder=\"Enter password\" onChange={this.onChange} value={password} />\n                        \n\n                    </div>\n                    <button type=\"submit\" class=\"btn btn\" id=\"loginb\">Login\n                    </button>\n\n                    {error && <p>{error.message}</p>}\n\n                </form>\n            </div>\n        );\n    }\n}\n\nconst DoctorLoginForm = compose(\n    withRouter,\n    withFirebase,\n)(DoctorLogin);\n\n\nexport default DoctorLoginPage;\n\nexport {DoctorLoginForm};"]},"metadata":{},"sourceType":"module"}