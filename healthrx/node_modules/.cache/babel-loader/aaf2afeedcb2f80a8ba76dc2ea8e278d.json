{"ast":null,"code":"import _objectSpread from \"/home/sumb0dy/Desktop/hackathon/WICKPYZ-Hackathon/healthrx/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/sumb0dy/Desktop/hackathon/WICKPYZ-Hackathon/healthrx/src/Account/CreateAccount.js\";\nimport React, { Component } from 'react';\nimport './CreateAccount.css';\nimport { Form } from 'react-bootstrap';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../constants/routes';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nconst CreatAccountPage = () => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, React.createElement(\"h2\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, \" Register \"), React.createElement(CreatAccountForm, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}));\n\nconst INITIAL_STATE = {\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass CreateAccount extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.onSubmit = event => {\n      const _this$state = this.state,\n            email = _this$state.email,\n            passwordOne = _this$state.passwordOne;\n      this.props.firebase.doCreateUserWithEmailAndPassword(email, passwordOne).then(authUser => {\n        this.setState(_objectSpread({}, INITIAL_STATE));\n        this.props.history.push(ROUTES.HOME); // REDIRECTS TO USERS HOME \n      }).catch(error => {\n        this.setState({\n          error\n        });\n      });\n      event.preventDefault();\n    };\n\n    this.state = _objectSpread({}, INITIAL_STATE);\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          email = _this$state2.email,\n          passwordOne = _this$state2.passwordOne,\n          passwordTwo = _this$state2.passwordTwo,\n          error = _this$state2.error;\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === '' || email === '';\n    return React.createElement(\"div\", {\n      id: \"wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      id: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"inputEmail3\",\n      class: \"col-sm-2 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"div\", {\n      class: \"col-sm-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      value: email,\n      name: \"email\",\n      onChange: this.onChange,\n      type: \"email\",\n      placeholder: \"Enter email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"inputEmail3\",\n      class: \"col-sm-2 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Password \"), React.createElement(\"div\", {\n      class: \"col-sm-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      value: passwordOne,\n      name: \"passwordOne\",\n      onChange: this.onChange,\n      type: \"password\",\n      placeholder: \"Enter password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"inputPassword3\",\n      class: \"col-sm-2 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Retype-Password\"), React.createElement(\"div\", {\n      class: \"col-sm-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      value: passwordTwo,\n      name: \"passwordTwo\",\n      onChange: this.onChange,\n      type: \"password\",\n      placeholder: \"Retype-password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"small\", {\n      id: \"passwordHelp\",\n      class: \"text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Passwords are not the same\"))), React.createElement(Form.Group, {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"exampleFormControlSelect2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Account type\"), React.createElement(\"select\", {\n      class: \"form-control col-sm-3\",\n      id: \"accounttype\",\n      onchange: \"enablenum()\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"patient\",\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Patient\"), React.createElement(\"option\", {\n      value: \"doctor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Doctor\"))), React.createElement(Form.Group, {\n      className: \"row disabled mt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"inputnum\",\n      class: \"col-sm-2 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"NPI number\"), React.createElement(\"div\", {\n      className: \"col-sm-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"number\",\n      placeholder: \"1234567890\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col-sm-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      disabled: isInvalid,\n      type: \"submit\",\n      class: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Create Account\"))), error && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, error.message)));\n  }\n\n} // const CreatAccountForm = compose(withRouter,withFirebase(CreateAccount));\n\n\nconst CreatAccountForm = compose(withRouter, withFirebase)(CreateAccount);\nexport default CreatAccountPage;\nexport { CreatAccountForm };","map":{"version":3,"sources":["/home/sumb0dy/Desktop/hackathon/WICKPYZ-Hackathon/healthrx/src/Account/CreateAccount.js"],"names":["React","Component","Form","withFirebase","ROUTES","withRouter","compose","CreatAccountPage","INITIAL_STATE","email","passwordOne","passwordTwo","error","CreateAccount","constructor","props","onChange","event","setState","target","name","value","onSubmit","state","firebase","doCreateUserWithEmailAndPassword","then","authUser","history","push","HOME","catch","preventDefault","render","isInvalid","message","CreatAccountForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './CreateAccount.css'\nimport { Form } from 'react-bootstrap'\n\nimport {  withFirebase } from '../Firebase';\nimport * as ROUTES from '../constants/routes'\nimport { withRouter } from 'react-router-dom';\n\nimport {compose} from 'recompose';\n\n\nconst CreatAccountPage = () =>(\n    <div>\n        {/* Header Goes Here */}\n        <h2> Register </h2>\n        <CreatAccountForm/>\n  </div>\n\n);\n\n\n  const INITIAL_STATE = {\n    email: '',\n    passwordOne: '',\n    passwordTwo: '',\n    error: null,\n  };\n\nclass CreateAccount extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { ...INITIAL_STATE };\n      }\n\n    onChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n      };\n\n    onSubmit = event => {\n        const { email, passwordOne } = this.state;\n\n        this.props.firebase\n          .doCreateUserWithEmailAndPassword(email, passwordOne)\n          .then(authUser => {\n            this.setState({ ...INITIAL_STATE });\n            this.props.history.push(ROUTES.HOME); // REDIRECTS TO USERS HOME \n          })\n          .catch(error => {\n            this.setState({ error });\n          });\n    \n        event.preventDefault();\n\n    };\n\n    render() {\n\n        const{\n            email,\n            passwordOne,\n            passwordTwo,\n            error,\n        } = this.state;\n\n        const isInvalid =\n        passwordOne !== passwordTwo ||\n        passwordOne === '' ||\n        email === ''\n        ;\n\n        return (   \n                <div id=\"wrap\">\n                <form id=\"form\" >\n                    \n                    <hr/>\n                    <Form.Group>\n                        <label for=\"inputEmail3\" class=\"col-sm-2 col-form-label\">Email</label>\n                        <div class=\"col-sm-4\">\n                            {/* <input type=\"email\" class=\"form-control\" id=\"inputEmail3\" placeholder=\"Email\"> */}\n                            <Form.Control value={email} name=\"email\" onChange={this.onChange} type=\"email\" placeholder=\"Enter email\" />\n                        </div>\n                    </Form.Group>\n                    <Form.Group>\n                        <label for=\"inputEmail3\" class=\"col-sm-2 col-form-label\">Password </label>\n                        <div class=\"col-sm-4\">\n                            {/* <input type=\"password\" class=\"form-control\" id=\"pass1\" placeholder=\"Password\"> */}\n                            <Form.Control value={passwordOne} name=\"passwordOne\" onChange={this.onChange} type=\"password\" placeholder=\"Enter password\" />\n                        </div>\n                    </Form.Group>\n                    <Form.Group>\n                        <label for=\"inputPassword3\" class=\"col-sm-2 col-form-label\">Retype-Password</label>\n                        <div class=\"col-sm-4\">\n                            {/* <input type=\"password\" onchange=\"checkpass()\" class=\"form-control\" id=\"pass2\" placeholder=\"Retype-Password\"> */}\n                            <Form.Control value={passwordTwo} name=\"passwordTwo\"  onChange={this.onChange} type=\"password\" placeholder=\"Retype-password\" />\n\n                            <small id=\"passwordHelp\" class=\"text-danger\">\n                                Passwords are not the same\n                            </small>  \n                        </div>\n                    </Form.Group>\n                    <Form.Group class=\"form-group\">\n                        <label for=\"exampleFormControlSelect2\">Account type</label>\n                        <select class=\"form-control col-sm-3\" id=\"accounttype\" onchange=\"enablenum()\">\n                            <option value=\"patient\" selected>Patient</option>\n                            <option value=\"doctor\">Doctor</option>\n                        </select>\n                    </Form.Group>\n                    <Form.Group className=\"row disabled mt-2\">\n                        <label for=\"inputnum\" class=\"col-sm-2 col-form-label\">NPI number</label>\n                        <div className=\"col-sm-4\">\n                            {/* <input type=\"number\"  class=\"form-control\" id=\"inputnum\" placeholder=\"1234567890\" disabled> */}\n                            <Form.Control type=\"number\" placeholder=\"1234567890\" disabled/>\n                        </div>\n                    </Form.Group>\n                    {/* <SignUpLink/> */}\n                    <Form.Group>\n                        <div class=\"col-sm-4\" >\n                            <button disabled={isInvalid}  type=\"submit\" class=\"btn btn-primary\">Create Account</button>\n                        </div>\n                    </Form.Group> \n                    {error && <p>{error.message}</p>}\n                </form>\n            </div>\n        );\n    }\n}\n\n// const CreatAccountForm = compose(withRouter,withFirebase(CreateAccount));\nconst CreatAccountForm = compose(\n    withRouter,\n    withFirebase,\n  )(CreateAccount);\n\nexport default CreatAccountPage;\n\nexport {CreatAccountForm }"]},"metadata":{},"sourceType":"module"}